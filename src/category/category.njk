---
# This tells Eleventy to create one page for each item in our "categories" collection.
pagination:
  data: collections.categories # CORRECTED: Points to the "categories" collection from your .eleventy.js
  size: 1
  alias: category # In the template, we'll refer to the current category as "category"
permalink: "category/{{ category.key }}/" # Creates the URL, e.g., /category/politics/
layout: layouts/base.njk
eleventyComputed:
  title: "{{ category.name }}" # Sets the page title, e.g., "Politics"
---
{# This is a reusable component to display a post card. #}
{% macro Card(post) %}
<article class="card">
  <a href="{{ post.url }}" class="thumb" aria-label="{{ post.data.title }}">
    <img
      src="{{ post.data.image or '/assets/fallback-thumb.jpg' }}"
      alt="{{ post.data.title | safe }}"
      loading="lazy" decoding="async" width="600" height="338">
  </a>
  <div class="meta">
    <h3 class="hed"><a href="{{ post.url }}">{{ post.data.title }}</a></h3>
    {% if post.date %}
      <time datetime="{{ post.date | isoDate }}">{{ post.date | displayDate('en-US') }}</time>
    {% endif %}
  </div>
</article>
{% endmacro %}

{# The header for the category page #}
<header class="section-head" style="margin:.5rem 0 1rem;">
  <h1 style="margin:0">{{ category.name }}</h1>
  {# The category object from our collection has an "items" array. We can get its length. #}
  <span class="meta">{{ category.items.length }} article{% if category.items.length != 1 %}s{% endif %}</span>
</header>

{# The grid that displays all the posts #}
<div class="grid">
  {# Loop through all the posts in this category's "items" array #}
  {% for post in category.items %}
    {{ Card(post) | safe }}
  {% else %}
    <p class="muted">No articles yet in this section.</p>
  {% endfor %}
</div>